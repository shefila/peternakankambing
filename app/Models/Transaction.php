<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Transaction extends Model
{
    use HasFactory;

    protected $fillable = [
        'saving_id',
        'order_id',
        'amount',
        'category',
        'payment_proof',
        'status',
        'description'
    ];

    const CATEGORY_BUY = 'buy';
    const CATEGORY_DEPOSIT = 'deposit';
    const CATEGORY_WITHDRAW = 'withdraw';

    const STATUS_SUCCESS = 'success';
    const STATUS_PENDING = 'pending';
    const STATUS_FAILED = 'failed';
    const STATUS_CANCELLED = 'cancelled';
    const STATUS_WAITING_APPROVAL = 'waiting approval';

    public function wallet()
    {
        return $this->belongsTo(Wallet::class);
    }

    public function savingRelation()
    {
        return $this->belongsTo(Saving::class,'saving_id','id');
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::updated(function ($transaction) {
            if($transaction['category'] === self::CATEGORY_DEPOSIT && $transaction['status'] === self::STATUS_SUCCESS){
                $wallet = $transaction->wallet;
                $wallet->cash += $transaction->amount;
                $wallet->save();
            }

            if($transaction['category'] === self::CATEGORY_WITHDRAW && ($transaction['status'] === self::STATUS_FAILED || $transaction['status'] === self::STATUS_CANCELLED)){
                $wallet = $transaction->wallet;
                $wallet->cash += $transaction->amount;
                $wallet->save();
            }
        });

        static::created(function ($transaction){
            if($transaction['category'] === self::CATEGORY_WITHDRAW && ($transaction['status'] === self::STATUS_PENDING || $transaction['status'] === self::STATUS_WAITING_APPROVAL)){
                $wallet = $transaction->wallet;
                $wallet->cash -= $transaction->amount;
                $wallet->save();
            }

            if($transaction['category'] === self::CATEGORY_BUY && $transaction['status'] === self::STATUS_SUCCESS){
                $wallet = $transaction->wallet;
                $wallet->cash -= $transaction->amount;
                $wallet->save();
            }
        });
    }

    public function getPaymentProofLinkAttribute()
    {
        if($this['payment_proof'] !== null){
            return '<a href="'.$this['payment_proof'].'">Lihat bukti transfer</a>';
        } else {
            return 'Belum ada bukti transfer';
        }
    }

    public function order()
    {
        return $this->belongsTo(Order::class);
    }
}
